/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz2employees;

import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author YingLuo
 */
public class Quiz2Employees extends javax.swing.JFrame {

    /**
     * Creates new form Quiz2Employees
     */
    
    DefaultListModel<EmployeeSchedule> listModelEmployeeSchedule = new DefaultListModel();
    DefaultListModel<Weekday> listModelWeekday = new DefaultListModel();
    ArrayList<EmployeeSchedule> employeesList = new ArrayList<>();
    
    static final String SUFFIX_TXT = ".txt";
    static final String FILENAME_PATTERN = ".+\\.[A-Za-z0-9]+$";
    static final String DATA_FILENAME = "employees.txt";
    
    private int currentlyEditedItemIndex = -1; // adding, not editing
    
    public Quiz2Employees() {
        this.setPreferredSize(new Dimension(800, 600));
        initComponents();
        try {
            readDataFromFile();
        } catch (InvalidDataException ex) {
            JOptionPane.showMessageDialog(this, "Errors reading data file: " + ex.getMessage(), "File error", JOptionPane.ERROR_MESSAGE);
        }
        listModelWeekday.addAll(Arrays.asList(Weekday.values()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgAddEdit = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        dlgAddEdit_tfName = new javax.swing.JTextField();
        dlgAddEdit_ckbManager = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        dlgAddEdit_tfHiredDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dlgAddEdit_tfDepartment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dlgAddEdit_lstWeekday = new javax.swing.JList<>();
        dlgAddEdit_btCancel = new javax.swing.JButton();
        dlgAddEdit_btSave = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();
        popupMenu = new javax.swing.JPopupMenu();
        pp_miEdit = new javax.swing.JMenuItem();
        lblStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstEmployee = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miExport = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        rbmi_sortByName = new javax.swing.JRadioButtonMenuItem();
        rbmi_sortByHiredDate = new javax.swing.JRadioButtonMenuItem();
        miAdd = new javax.swing.JMenu();

        dlgAddEdit.setTitle("Add or Edit");
        dlgAddEdit.setModal(true);
        dlgAddEdit.setResizable(false);

        jLabel1.setText("Name");

        dlgAddEdit_ckbManager.setText("is Manager");

        jLabel2.setText("Hired Date");

        jLabel3.setText("Department");

        jLabel4.setText("Works on days");

        dlgAddEdit_lstWeekday.setModel(listModelWeekday);
        jScrollPane2.setViewportView(dlgAddEdit_lstWeekday);

        dlgAddEdit_btCancel.setText("Cancel");
        dlgAddEdit_btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btCancelActionPerformed(evt);
            }
        });

        dlgAddEdit_btSave.setText("Add");
        dlgAddEdit_btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAddEditLayout = new javax.swing.GroupLayout(dlgAddEdit.getContentPane());
        dlgAddEdit.getContentPane().setLayout(dlgAddEditLayout);
        dlgAddEditLayout.setHorizontalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dlgAddEditLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dlgAddEdit_tfDepartment))
                            .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgAddEditLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(dlgAddEdit_tfHiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(dlgAddEditLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(49, 49, 49)
                                    .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dlgAddEdit_ckbManager)
                                        .addComponent(dlgAddEdit_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(dlgAddEdit_btCancel)))
                .addGap(28, 28, 28)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dlgAddEdit_btSave)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        dlgAddEditLayout.setVerticalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(dlgAddEdit_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(dlgAddEdit_ckbManager)
                        .addGap(18, 18, 18)
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dlgAddEdit_tfHiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dlgAddEdit_tfDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(dlgAddEdit_btCancel))
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dlgAddEdit_btSave)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pp_miEdit.setText("Edit");
        pp_miEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pp_miEditActionPerformed(evt);
            }
        });
        popupMenu.add(pp_miEdit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblStatus.setText("...");
        getContentPane().add(lblStatus, java.awt.BorderLayout.PAGE_END);

        lstEmployee.setModel(listModelEmployeeSchedule);
        lstEmployee.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstEmployeeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lstEmployeeMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(lstEmployee);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        miExport.setText("Export to csv...");
        miExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExportActionPerformed(evt);
            }
        });
        jMenu1.add(miExport);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sort By");

        rbmi_sortByName.setSelected(true);
        rbmi_sortByName.setText("Name");
        rbmi_sortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbmi_sortByNameActionPerformed(evt);
            }
        });
        jMenu2.add(rbmi_sortByName);

        rbmi_sortByHiredDate.setSelected(true);
        rbmi_sortByHiredDate.setText("Hired Date");
        rbmi_sortByHiredDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbmi_sortByHiredDateActionPerformed(evt);
            }
        });
        jMenu2.add(rbmi_sortByHiredDate);

        jMenuBar1.add(jMenu2);

        miAdd.setText("Add");
        miAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miAddMouseClicked(evt);
            }
        });
        jMenuBar1.add(miAdd);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbmi_sortByHiredDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbmi_sortByHiredDateActionPerformed
        // TODO add your handling code here:
        employeesList = Collections.list(listModelEmployeeSchedule.elements()); 
        employeesList.sort(EmployeeSchedule.compareByHiredDate);
        resetListAfterSorting();
    }//GEN-LAST:event_rbmi_sortByHiredDateActionPerformed

    private void rbmi_sortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbmi_sortByNameActionPerformed
        // TODO add your handling code here:
        employeesList = Collections.list(listModelEmployeeSchedule.elements()); 
        employeesList.sort(EmployeeSchedule.compareByName);
        resetListAfterSorting();
    }//GEN-LAST:event_rbmi_sortByNameActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        saveDataToFile(new File(DATA_FILENAME));
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void dlgAddEdit_btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btCancelActionPerformed
        // TODO add your handling code here:
        dlgAddEdit.setVisible(false);
    }//GEN-LAST:event_dlgAddEdit_btCancelActionPerformed

    private void miExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExportActionPerformed
        // TODO add your handling code here:
        fileChooser.setDialogTitle("Export to File");
        
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            
            File chosenFile = fileChooser.getSelectedFile();
            
            if (!chosenFile.getName().toLowerCase().matches(FILENAME_PATTERN)) {
                chosenFile = new File(fileChooser.getSelectedFile() + SUFFIX_TXT);
            }
            saveDataToFile(chosenFile);
        }
    }//GEN-LAST:event_miExportActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        // TODO add your handling code here:
        saveDataToFile(new File(DATA_FILENAME));
        dispose();
    }//GEN-LAST:event_miExitActionPerformed

    private void miAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miAddMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            dlgAddEdit_btSave.setText("Add");
            currentlyEditedItemIndex = -1;
            clearAllSelections();
            dlgAddEdit.pack();
            dlgAddEdit.setLocationRelativeTo(this);
            dlgAddEdit.setVisible(true);
        }
    }//GEN-LAST:event_miAddMouseClicked

    private void lstEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstEmployeeMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1){  // if double click happened
            
            int index = lstEmployee.getSelectedIndex();
            
            if(index <0){
                return;
            }
            
            dlgAddEdit_btSave.setText("Update");
            currentlyEditedItemIndex = index;
            
            setValueFromListToDialog(index);
            
            dlgAddEdit.pack();  // Without this the dialog window will be too small to see
            dlgAddEdit.setVisible(true);
            dlgAddEdit.setLocationRelativeTo(this);
            
        }
        
        updateLableStatus();
        
    }//GEN-LAST:event_lstEmployeeMouseClicked

    private void dlgAddEdit_btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btSaveActionPerformed
        // TODO add your handling code here:
        
        try {   
            
            if(!dlgAddEdit_lstWeekday.isSelectionEmpty()){
                
                EmployeeSchedule employeeSchedule = new EmployeeSchedule(
                                                                    dlgAddEdit_tfName.getText(), 
                                                                    dlgAddEdit_ckbManager.isSelected(),
                                                                    dlgAddEdit_tfDepartment.getText(), 
                                                                    EmployeeSchedule.dateFormat.parse(dlgAddEdit_tfHiredDate.getText())
                                                                    );   
                
                HashSet weekdays = new HashSet<>(Arrays.asList(dlgAddEdit_lstWeekday.getSelectedValuesList()));
                employeeSchedule.setWorkdaysList(weekdays);
                
                if(currentlyEditedItemIndex == -1){   
                    
                    listModelEmployeeSchedule.addElement(employeeSchedule);    
                
                }else {              
                    
                    listModelEmployeeSchedule.setElementAt(employeeSchedule, currentlyEditedItemIndex);                
                }
                
    
            }else{
                JOptionPane.showMessageDialog(this, "Please choose at least one workday");
            }

        }catch(IllegalArgumentException e){        
            JOptionPane.showMessageDialog(this, "Failed to find the weekday enum data: " + e.getMessage(), "Add error", JOptionPane.ERROR_MESSAGE);
            
        } catch (ParseException ex) {    
            JOptionPane.showMessageDialog(this, "Date format yyyy-mm-dd: " + ex.getMessage());
            
        } catch (InvalidDataException ex) {          
            JOptionPane.showMessageDialog(this, "Error in adding birthday: " + ex.getMessage());
        }

        clearAllSelections();
        dlgAddEdit.setVisible(false);
        
    }//GEN-LAST:event_dlgAddEdit_btSaveActionPerformed

    
    private void clearAllSelections(){
        dlgAddEdit_tfName.setText("");
        dlgAddEdit_ckbManager.setSelected(false);
        dlgAddEdit_tfDepartment.setText("");
        dlgAddEdit_tfHiredDate.setText("");
        dlgAddEdit_lstWeekday.clearSelection();
    }
    
    private void lstEmployeeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstEmployeeMousePressed
        // TODO add your handling code here:
        if(evt.isPopupTrigger()){
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_lstEmployeeMousePressed

    private void pp_miEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pp_miEditActionPerformed
        // TODO add your handling code here:
        int index = lstEmployee.getSelectedIndex();
            
            if(index <0){
                return;
            }
            
            dlgAddEdit_btSave.setText("Save");
            currentlyEditedItemIndex = index;

            setValueFromListToDialog(index);
            
            dlgAddEdit.pack();  // Without this the dialog window will be too small to see
            dlgAddEdit.setVisible(true);
            dlgAddEdit.setLocationRelativeTo(this);
            
            updateLableStatus();
            
    }//GEN-LAST:event_pp_miEditActionPerformed

    private void updateLableStatus(){
        
        if(lstEmployee.getSelectedIndex() >= 0){
            lblStatus.setText(lstEmployee.getSelectedValue().toString());
        }else{
            lblStatus.setText("");
        }
    }
    
    private void setValueFromListToDialog(int index){
        
            dlgAddEdit_tfName.setText(listModelEmployeeSchedule.get(index).getName());
            dlgAddEdit_ckbManager.setSelected(listModelEmployeeSchedule.get(index).isIsManager());
            dlgAddEdit_tfHiredDate.setText(EmployeeSchedule.dateFormat.format(listModelEmployeeSchedule.get(index).getDateHired()));
            dlgAddEdit_tfDepartment.setText(listModelEmployeeSchedule.get(index).getDepartment());
            dlgAddEdit_lstWeekday.setSelectedValue(Weekday.values(), true);
            //dlgAddEdit_lstWeekday.setSelectedValue(listModelEmployeeSchedule.get(index).getWorkdaysList(), true);
            
    }
    
    private void resetListAfterSorting(){
        
        listModelEmployeeSchedule.clear();    
        for(int i=0; i<employeesList.size(); i++ ){
            listModelEmployeeSchedule.addElement(employeesList.get(i));
        }
        lstEmployee.setModel(listModelEmployeeSchedule);
    }
    
    private void saveDataToFile(File file) {
        
        try (PrintWriter fileOutput = new PrintWriter(file)) {
            
            for (int i = 0; i < listModelEmployeeSchedule.size(); i++) {
                String dataLine  = listModelEmployeeSchedule.getElementAt(i).toDataLine();
                fileOutput.println(dataLine);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error saving data to file:\n" + ex.getMessage(),
                    "File error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void readDataFromFile() throws InvalidDataException {
        
        ArrayList<String> errorList = new ArrayList<>();
        
        int lineNo = 0;
        
        try (Scanner fileInput = new Scanner(new File(DATA_FILENAME))) {
            
            while (fileInput.hasNextLine()) {
                
                try {
                    
                    lineNo++;
                    String line = fileInput.nextLine();             
                    EmployeeSchedule employeeSchedule = new EmployeeSchedule(line);                   
                    listModelEmployeeSchedule.addElement(employeeSchedule);
                    
                } catch (InvalidDataException e) {
                    errorList.add(String.format("Error in line %d: %s", lineNo, e.getMessage()));
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Errors reading data file: " + ex.getMessage(), "File error", JOptionPane.ERROR_MESSAGE);
        }
        
        if (!errorList.isEmpty()) {
            JOptionPane.showMessageDialog(this, String.join("\n", errorList), "File error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz2Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz2Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz2Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz2Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz2Employees().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dlgAddEdit;
    private javax.swing.JButton dlgAddEdit_btCancel;
    private javax.swing.JButton dlgAddEdit_btSave;
    private javax.swing.JCheckBox dlgAddEdit_ckbManager;
    private javax.swing.JList<Weekday> dlgAddEdit_lstWeekday;
    private javax.swing.JTextField dlgAddEdit_tfDepartment;
    private javax.swing.JTextField dlgAddEdit_tfHiredDate;
    private javax.swing.JTextField dlgAddEdit_tfName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList<EmployeeSchedule> lstEmployee;
    private javax.swing.JMenu miAdd;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miExport;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JMenuItem pp_miEdit;
    private javax.swing.JRadioButtonMenuItem rbmi_sortByHiredDate;
    private javax.swing.JRadioButtonMenuItem rbmi_sortByName;
    // End of variables declaration//GEN-END:variables
}
