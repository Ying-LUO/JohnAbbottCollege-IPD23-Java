/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz3booksandauthors;

import java.sql.Blob;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.sql.rowset.serial.SerialBlob;

/**
 *
 * @author YingLuo
 */
public class Quiz3BooksAndAuthors extends javax.swing.JFrame {

    /**
     * Creates new form Quiz3BooksAndAuthors
     */
    
    DefaultListModel<Book> listModelBook = new DefaultListModel<>();
    DefaultListModel<String> listModelAuthorName = new DefaultListModel<>();
    
    ArrayList<Author> authorListFromDlg;
    Database db;
    Blob inputPhoto;
    BufferedImage currentImage;
    
    public Quiz3BooksAndAuthors() {
        initComponents();
        try{
            db = new Database();
            
        }catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        
        loadBooksFromDatabase();
    }
    
    private void loadBooksFromDatabase(){
        
        try{
            ArrayList<Book> bookList = db.getAllBooks();
            
            listModelBook.clear();
            listModelBook.addAll(bookList);
            listModelAuthorName.clear();
            
        }catch(SQLException ex){    
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgAuthor = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        dlgAuthor_tfName = new javax.swing.JTextField();
        dlgAuthor_btAddAuthor = new javax.swing.JButton();
        dlgAuthor_btSaveAuthorToBook = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dlgAuthor_lstAuthor = new javax.swing.JList<>();
        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBook = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCover = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btChooseAuthor = new javax.swing.JButton();
        btAddBook = new javax.swing.JButton();
        ftfPubDate = new javax.swing.JFormattedTextField();
        tfISBN = new javax.swing.JTextField();
        tfTitle = new javax.swing.JTextField();
        lblAuthor = new javax.swing.JLabel();

        dlgAuthor.setModal(true);

        jLabel5.setText("Name");

        dlgAuthor_btAddAuthor.setText("Add Author");
        dlgAuthor_btAddAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuthor_btAddAuthorActionPerformed(evt);
            }
        });

        dlgAuthor_btSaveAuthorToBook.setText("Save Author to Book");
        dlgAuthor_btSaveAuthorToBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuthor_btSaveAuthorToBookActionPerformed(evt);
            }
        });

        dlgAuthor_lstAuthor.setModel(listModelAuthorName);
        dlgAuthor_lstAuthor.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(dlgAuthor_lstAuthor);

        javax.swing.GroupLayout dlgAuthorLayout = new javax.swing.GroupLayout(dlgAuthor.getContentPane());
        dlgAuthor.getContentPane().setLayout(dlgAuthorLayout);
        dlgAuthorLayout.setHorizontalGroup(
            dlgAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgAuthorLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dlgAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(dlgAuthorLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(dlgAuthor_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(dlgAuthor_btAddAuthor)))
                .addGap(25, 25, 25))
            .addGroup(dlgAuthorLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(dlgAuthor_btSaveAuthorToBook)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dlgAuthorLayout.setVerticalGroup(
            dlgAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAuthorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(dlgAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dlgAuthor_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dlgAuthor_btAddAuthor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dlgAuthor_btSaveAuthorToBook)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Books And Authors");
        setResizable(false);

        lstBook.setModel(listModelBook);
        lstBook.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstBook.setToolTipText("");
        jScrollPane1.setViewportView(lstBook);

        jLabel1.setText("Title");

        jLabel2.setText("ISBN");

        jLabel3.setText("Pub. Date");

        jLabel4.setText("Cover");

        lblCover.setAlignmentY(0.0F);
        lblCover.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblCover.setPreferredSize(new java.awt.Dimension(150, 150));
        lblCover.setSize(new java.awt.Dimension(150, 150));
        lblCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCoverMouseClicked(evt);
            }
        });

        jLabel6.setText("Authors");

        btChooseAuthor.setText("Choose Authors");
        btChooseAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChooseAuthorActionPerformed(evt);
            }
        });

        btAddBook.setText("Add Book");
        btAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddBookActionPerformed(evt);
            }
        });

        ftfPubDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        lblAuthor.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfTitle)
                    .addComponent(tfISBN)
                    .addComponent(ftfPubDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btChooseAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAddBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ftfPubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(lblAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btChooseAuthor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAddBook)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddBookActionPerformed
        try {
            // TODO add your handling code here:
            
            String title = tfTitle.getText();
            
            if(db.getBookISBN().contains(tfISBN.getText())){
                JOptionPane.showMessageDialog(this, "ISBN already exist, please input another one");
                return;
            }
            String isbn = tfISBN.getText();
            Date pubDate = Book.dateFormat.parse(ftfPubDate.getText());
            Book book = new Book(0, title, isbn, pubDate, inputPhoto, authorListFromDlg);
            int newBookId = db.addBook(book);
            for(Author a :authorListFromDlg){
                a.setBookId(newBookId);
                db.addAuthor(a);
            }
            loadBooksFromDatabase();
            clearUpInputs();
        } catch (ParseException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Please input Date! ");
        } catch (InvalidDataException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to add Book: " + ex.getMessage(), "Internel error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAddBookActionPerformed

    private void clearUpInputs(){
        
        tfTitle.setText("");
        tfISBN.setText("");
        ftfPubDate.setText("");
        lblCover.setIcon(null);
        lblAuthor.setText("");
        inputPhoto = null;
        authorListFromDlg = null;
        
    }
    
    private void btChooseAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChooseAuthorActionPerformed
        // TODO add your handling code here:
        dlgAuthor_tfName.setText("");
        listModelAuthorName.clear();
        dlgAuthor.pack();
        dlgAuthor.setLocationRelativeTo(this);
        dlgAuthor.setVisible(true);
    }//GEN-LAST:event_btChooseAuthorActionPerformed

    private void dlgAuthor_btAddAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuthor_btAddAuthorActionPerformed
        // TODO add your handling code here:
        
        String name = dlgAuthor_tfName.getText();
        ArrayList<String> nameList = new ArrayList<>();
        nameList.add(name);
        listModelAuthorName.addAll(nameList);
        String nameString = "";
        for(int i=0; i<listModelAuthorName.size(); i++){
            nameString += listModelAuthorName.getElementAt(i)+"<br/>";
        }
        lblAuthor.setText("<html>"+nameString+"</html>");
        dlgAuthor_tfName.setText("");
    }//GEN-LAST:event_dlgAuthor_btAddAuthorActionPerformed

    private void dlgAuthor_btSaveAuthorToBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuthor_btSaveAuthorToBookActionPerformed
        // TODO add your handling code here:
        authorListFromDlg = new ArrayList<>();
        for(int i=0; i< listModelAuthorName.size(); i++){
            
            try {
                int fakeBookId = 0;
                Author author = new Author(i, fakeBookId, listModelAuthorName.getElementAt(i));
                
                authorListFromDlg.add(author);
            } catch (InvalidDataException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to save author: " + ex.getMessage(), "internal error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        dlgAuthor.setVisible(false);
    }//GEN-LAST:event_dlgAuthor_btSaveAuthorToBookActionPerformed

    private void lblCoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCoverMouseClicked
        // TODO add your handling code here:
        fileChooser.setFileFilter(new FileNameExtensionFilter("JPEG file", "jpg", "jpeg", "png", "gif"));
        fileChooser.setDialogTitle("Choose a image");
        
        try {
            
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

                File chosenFile = fileChooser.getSelectedFile();
                currentImage = ImageIO.read(chosenFile);
                Image scaledImg = currentImage.getScaledInstance(lblCover.getWidth(), lblCover.getHeight(), Image.SCALE_SMOOTH);
                lblCover.setIcon(new ImageIcon(scaledImg));
                inputPhoto = new SerialBlob(Files.readAllBytes(chosenFile.toPath()));
            }
        }
         catch (SQLException | IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error loading image file: " + ex.getMessage(),
                                                    "File error", JOptionPane.ERROR_MESSAGE);
        } 
        
    }//GEN-LAST:event_lblCoverMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz3BooksAndAuthors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddBook;
    private javax.swing.JButton btChooseAuthor;
    private javax.swing.JDialog dlgAuthor;
    private javax.swing.JButton dlgAuthor_btAddAuthor;
    private javax.swing.JButton dlgAuthor_btSaveAuthorToBook;
    private javax.swing.JList<String> dlgAuthor_lstAuthor;
    private javax.swing.JTextField dlgAuthor_tfName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JFormattedTextField ftfPubDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblCover;
    private javax.swing.JList<Book> lstBook;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables
}
