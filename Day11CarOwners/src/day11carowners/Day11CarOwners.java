/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day11carowners;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.sql.Blob;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.serial.SerialBlob;

/**
 *
 * @author YingLuo
 */
public class Day11CarOwners extends javax.swing.JFrame {

    /**
     * Creates new form Day11CarOwners
     */
    //Place in the right of frame, get resultList of instantiations of car objects read data from database car table only
    DefaultListModel<Car> listModelCar = new DefaultListModel<>();
    //Place in the right of dialog, get resultList of instantiations of owner objects read data from database owner table only
    DefaultListModel<Owner> listModelDlgOwner = new DefaultListModel<>();
    
    //Place in left of dialog, get resultList of structured string from database outerjoin query from car and owner table
    DefaultListModel<String> listModelDlgCarsWithOwner = new DefaultListModel<>();
    //Place in left of frame, get resultList of structured string from database outerjoin query from car and owner table
    DefaultListModel<String> listModelOwnerHasCars = new DefaultListModel<>();
    
    Blob inputPhoto;
    BufferedImage currentImage;
    Database db; 
    int currentlyEditedItemIndex= -1;
    
    public Day11CarOwners() {
        initComponents();
        try{
            db = new Database();
            
        }catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        
        loadCarOwnersFromDatabase();
    }
    
    private void loadCarOwnersFromDatabase(){
        
        try{
            ArrayList<String> ownerHasCarsList = db.getOwnerHasCars();
            ArrayList<Owner> ownerList = db.getAllOwners();
            ArrayList<Car> carList = db.getAllCars();
            ArrayList<String> carsWithOwnerList = db.getCarsWithOwnerName();
            
            listModelOwnerHasCars.clear();
            listModelOwnerHasCars.addAll(ownerHasCarsList);
            
            listModelCar.clear();
            listModelCar.addAll(carList);
            
            listModelDlgOwner.clear();
            listModelDlgOwner.addAll(ownerList);
            
            listModelDlgCarsWithOwner.clear();
            listModelDlgCarsWithOwner.addAll(carsWithOwnerList);
            
        }catch(SQLException ex){    
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        dlgCars = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        dlgCar_lstAllCars = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        dlgCar_lblId = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dlgCar_tfMakeModel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        dlgCar_tfProdYear = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dlgCar_tfPlates = new javax.swing.JTextField();
        dlgCar_btAddCar = new javax.swing.JButton();
        dlgCar_btUpdateCar = new javax.swing.JButton();
        dlgCar_btDeleteCar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        dlgCar_lstAllOwners = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        dlgCar_btUpdateOwner = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstOwnerHasCars = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        btDeletePhoto = new javax.swing.JButton();
        btManageCars = new javax.swing.JButton();
        btAddOwner = new javax.swing.JButton();
        btUpdateOwner = new javax.swing.JButton();
        btDeleteOwner = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCarsOwnedByOwner = new javax.swing.JList<>();
        btGiveUpCar = new javax.swing.JButton();

        dlgCars.setTitle("Cars");
        dlgCars.setModal(true);
        dlgCars.setResizable(false);

        dlgCar_lstAllCars.setModel(listModelDlgCarsWithOwner);
        dlgCar_lstAllCars.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dlgCar_lstAllCars.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dlgCar_lstAllCarsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(dlgCar_lstAllCars);

        jLabel5.setText("Id");

        dlgCar_lblId.setText("-");

        jLabel7.setText("Make Model");

        jLabel8.setText("Product Year");

        jLabel9.setText("Plates");

        dlgCar_btAddCar.setText("Add");
        dlgCar_btAddCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgCar_btAddCarActionPerformed(evt);
            }
        });

        dlgCar_btUpdateCar.setText("Update");
        dlgCar_btUpdateCar.setEnabled(false);
        dlgCar_btUpdateCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgCar_btUpdateCarActionPerformed(evt);
            }
        });

        dlgCar_btDeleteCar.setText("Delete");
        dlgCar_btDeleteCar.setEnabled(false);
        dlgCar_btDeleteCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgCar_btDeleteCarActionPerformed(evt);
            }
        });

        dlgCar_lstAllOwners.setModel(listModelDlgOwner);
        dlgCar_lstAllOwners.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(dlgCar_lstAllOwners);

        jLabel6.setText("Has Owner");

        dlgCar_btUpdateOwner.setText("Update Owner");
        dlgCar_btUpdateOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgCar_btUpdateOwnerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgCarsLayout = new javax.swing.GroupLayout(dlgCars.getContentPane());
        dlgCars.getContentPane().setLayout(dlgCarsLayout);
        dlgCarsLayout.setHorizontalGroup(
            dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCarsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dlgCarsLayout.createSequentialGroup()
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgCar_tfPlates)
                            .addComponent(dlgCar_tfProdYear)))
                    .addGroup(dlgCarsLayout.createSequentialGroup()
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(24, 24, 24)
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgCar_lblId)
                            .addComponent(dlgCar_tfMakeModel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dlgCar_btUpdateCar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dlgCar_btAddCar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dlgCar_btDeleteCar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(dlgCar_btUpdateOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        dlgCarsLayout.setVerticalGroup(
            dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCarsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dlgCar_lblId)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgCarsLayout.createSequentialGroup()
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(dlgCar_tfMakeModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dlgCar_tfProdYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dlgCar_tfPlates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dlgCar_btAddCar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dlgCar_btUpdateCar))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dlgCarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgCar_btDeleteCar)
                    .addComponent(dlgCar_btUpdateOwner))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgCarsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CarOwners");

        lstOwnerHasCars.setModel(listModelOwnerHasCars);
        lstOwnerHasCars.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOwnerHasCars.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOwnerHasCarsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOwnerHasCars);

        jLabel1.setText("Id");

        lblId.setText("-");

        jLabel3.setText("Name");

        jLabel4.setText("Photo");

        lblPhoto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPhotoMouseClicked(evt);
            }
        });

        btDeletePhoto.setText("Delete Photo");
        btDeletePhoto.setEnabled(false);
        btDeletePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletePhotoActionPerformed(evt);
            }
        });

        btManageCars.setText("Manage Cars");
        btManageCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btManageCarsActionPerformed(evt);
            }
        });

        btAddOwner.setText("Add");
        btAddOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddOwnerActionPerformed(evt);
            }
        });

        btUpdateOwner.setText("Update");
        btUpdateOwner.setEnabled(false);
        btUpdateOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateOwnerActionPerformed(evt);
            }
        });

        btDeleteOwner.setText("Delete");
        btDeleteOwner.setEnabled(false);
        btDeleteOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteOwnerActionPerformed(evt);
            }
        });

        jLabel2.setText("Cars Owned");

        lstCarsOwnedByOwner.setModel(listModelCar);
        lstCarsOwnedByOwner.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstCarsOwnedByOwner);

        btGiveUpCar.setText("Give up Car");
        btGiveUpCar.setEnabled(false);
        btGiveUpCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGiveUpCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btManageCars)
                        .addGap(56, 56, 56)
                        .addComponent(btAddOwner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btUpdateOwner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDeleteOwner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(btGiveUpCar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(btDeletePhoto))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfName)
                                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(lblId))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btDeletePhoto))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btManageCars)
                    .addComponent(btAddOwner)
                    .addComponent(btUpdateOwner)
                    .addComponent(btDeleteOwner)
                    .addComponent(btGiveUpCar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btManageCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btManageCarsActionPerformed
        // TODO add your handling code here:
        dlgCars.pack();
        dlgCars.setLocationRelativeTo(this);
        dlgCars.setVisible(true);
        
    }//GEN-LAST:event_btManageCarsActionPerformed

    private void btAddOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddOwnerActionPerformed
        // TODO add your handling code here:
       
        try {
            
            String name = tfName.getText();
            if(db.getOwnerNames().contains(name)){
                JOptionPane.showMessageDialog(this, "name already exist, please input another one");
                return;
            }
            Owner owner = new Owner(0, name, inputPhoto);
            db.addOwner(owner);
            loadCarOwnersFromDatabase();
            clearUpInputs();
        } catch (InvalidDataException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to create owner " + ex.getMessage(), "Internel error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAddOwnerActionPerformed

    private void clearUpInputs(){
        
        tfName.setText("");
        currentImage = null;
        inputPhoto = null;
    }
    
    private void lblPhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhotoMouseClicked
        // TODO add your handling code here:
        
        fileChooser.setFileFilter(new FileNameExtensionFilter("JPEG file", "jpg", "jpeg", "png", "gif"));
        fileChooser.setDialogTitle("Choose a image");
        
        try {
            
            if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

                File chosenFile = fileChooser.getSelectedFile();
                currentImage = ImageIO.read(chosenFile);
                Image scaledImg = currentImage.getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(), Image.SCALE_SMOOTH);
                lblPhoto.setIcon(new ImageIcon(scaledImg));
                inputPhoto = new SerialBlob(Files.readAllBytes(chosenFile.toPath()));;
            }
        }
         catch (SQLException | IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error loading image file: " + ex.getMessage(),
                                                    "File error", JOptionPane.ERROR_MESSAGE);
        } 
        
    }//GEN-LAST:event_lblPhotoMouseClicked

    private void btDeletePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletePhotoActionPerformed
        // TODO add your handling code here:
        currentImage = null;
        inputPhoto = null;
    }//GEN-LAST:event_btDeletePhotoActionPerformed

    private void lstOwnerHasCarsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOwnerHasCarsValueChanged
        // TODO add your handling code here:
        if(!lstOwnerHasCars.isSelectionEmpty()){
            
            try {
                String[] str = lstOwnerHasCars.getSelectedValue().split(":");
                int ownerId = Integer.valueOf(str[0]);
                
                Owner owner = db.getOwnerById(ownerId).get(0);
                tfName.setText(owner.getName());   
                inputPhoto = owner.getPhoto();
                InputStream is = inputPhoto.getBinaryStream(1, inputPhoto.length());
                currentImage = ImageIO.read(is);
                Image scaledImg = currentImage.getScaledInstance(currentImage.getWidth(), currentImage.getHeight(), Image.SCALE_DEFAULT);
                lblPhoto.setIcon(new ImageIcon(scaledImg));
                
                listModelCar.clear();
                listModelCar.addAll(db.getAllCarsOfAOwner(ownerId));
                
                btUpdateOwner.setEnabled(true);
                btDeleteOwner.setEnabled(true);
                btAddOwner.setEnabled(false);
                btGiveUpCar.setEnabled(true);
            } catch (SQLException | IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error loading owner " + ex.getMessage(),
                                                    "Internal error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            btAddOwner.setEnabled(true);
            btUpdateOwner.setEnabled(false);
            btDeleteOwner.setEnabled(false);
            btGiveUpCar.setEnabled(false);
        }
    }//GEN-LAST:event_lstOwnerHasCarsValueChanged

    private void dlgCar_lstAllCarsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dlgCar_lstAllCarsValueChanged
        
        if(!dlgCar_lstAllCars.isSelectionEmpty()){

            try {
                // TODO add your handling code here:

                String[] str = dlgCar_lstAllCars.getSelectedValue().split(":");
                int carId = Integer.valueOf(str[0]);

                Car car = db.getCarById(carId).get(0);
                dlgCar_lblId.setText(car.getId()+"");
                dlgCar_tfMakeModel.setText(car.getMakeModel());
                dlgCar_tfProdYear.setText(car.getProdYear()+"");
                dlgCar_tfPlates.setText(car.getPlates());
                
                //dlgCar_lstAllOwners.setSelectedIndex(WIDTH);

                dlgCar_btUpdateCar.setEnabled(true);
                dlgCar_btDeleteCar.setEnabled(true);
                dlgCar_btAddCar.setEnabled(false);
                dlgCar_btUpdateOwner.setEnabled(true);
            } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error loading car: " + ex.getMessage(),
                                                        "Internal error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            dlgCar_lblId.setText("-");
            dlgCar_tfMakeModel.setText("");
            dlgCar_tfProdYear.setText("");
            dlgCar_tfPlates.setText("");
            dlgCar_btUpdateCar.setEnabled(false);
            dlgCar_btDeleteCar.setEnabled(false);
            dlgCar_btAddCar.setEnabled(true);
            dlgCar_btUpdateOwner.setEnabled(false);
        }
        
    }//GEN-LAST:event_dlgCar_lstAllCarsValueChanged

    private void dlgCar_btAddCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgCar_btAddCarActionPerformed
        
        
        try {
            // TODO add your handling code here:
            String makeModel = dlgCar_tfMakeModel.getText();
            int prodYear = Integer.valueOf(dlgCar_tfProdYear.getText());
            String plates = dlgCar_tfPlates.getText();
            
            Car car = new Car(0, 0, makeModel, prodYear, plates);
            
            db.addCar(car);
            
            clearDlgInput();
            
            loadCarOwnersFromDatabase();
            
        } catch (InvalidDataException | SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error adding car: " + ex.getMessage(),
                                                    "Internal error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_dlgCar_btAddCarActionPerformed

    private void clearDlgInput(){
        
            dlgCar_lblId.setText("-");
            dlgCar_tfMakeModel.setText("");
            dlgCar_tfProdYear.setText("");
            dlgCar_tfPlates.setText("");
    }
    
    private void dlgCar_btDeleteCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgCar_btDeleteCarActionPerformed
        
            String[] str = dlgCar_lstAllCars.getSelectedValue().split(":");
            int carId = Integer.valueOf(str[0]);
            
            int decision = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete " + dlgCar_lstAllCars.getSelectedValue() + " ?",
                "Confirm deletion",
                JOptionPane.OK_CANCEL_OPTION);
            
            if (decision == JOptionPane.OK_OPTION) {
                
                try {
                    db.deleteCar(carId);
                    
                    clearDlgInput();
                    loadCarOwnersFromDatabase();
                    
                }catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Failed to delete a record: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }//GEN-LAST:event_dlgCar_btDeleteCarActionPerformed

    private void dlgCar_btUpdateCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgCar_btUpdateCarActionPerformed
        // TODO add your handling code here:
        try {
            String[] str = dlgCar_lstAllCars.getSelectedValue().split(":");
            int carId = Integer.valueOf(str[0]);
            
            String makeModel = dlgCar_tfMakeModel.getText();
            int prodYear = Integer.valueOf(dlgCar_tfProdYear.getText());
            String plates = dlgCar_tfPlates.getText();
            
            Car car = new Car(carId, 0, makeModel, prodYear, plates);
                
            db.updateCar(car);
            clearDlgInput();
            loadCarOwnersFromDatabase();
            
        }catch (InvalidDataException | SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Failed to update a record: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
                }
       
    }//GEN-LAST:event_dlgCar_btUpdateCarActionPerformed

    private void dlgCar_btUpdateOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgCar_btUpdateOwnerActionPerformed
        
        if(dlgCar_lstAllOwners.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this, "Please choose at least one owner");
            return;
        }
        
        
        
    }//GEN-LAST:event_dlgCar_btUpdateOwnerActionPerformed

    private void btGiveUpCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGiveUpCarActionPerformed
        // TODO add your handling code here:
        
        if(lstCarsOwnedByOwner.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this, "Please choose at least one car");
            return;
        }
        int decision = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to give up this car" + lstCarsOwnedByOwner.getSelectedValue() + " ?",
                "Confirm deletion",
                JOptionPane.OK_CANCEL_OPTION);
            
            if (decision == JOptionPane.OK_OPTION) {
                try { 
                    Car car = lstCarsOwnedByOwner.getSelectedValue();
                    car.setOwnerId(0);
                    db.updateCar(car);
                    loadCarOwnersFromDatabase();
                } catch (SQLException ex) {
                            ex.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Failed to give up this car: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }//GEN-LAST:event_btGiveUpCarActionPerformed

    private void btUpdateOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateOwnerActionPerformed
        // TODO add your handling code here:
        try {
            
            String[] str = lstOwnerHasCars.getSelectedValue().split(":");
            int ownerId = Integer.valueOf(str[0]);
            
            String name = tfName.getText();
            if(db.getOwnerNames().contains(name)){
                JOptionPane.showMessageDialog(this, "name already exist, please input another one");
                return;
            }
            Owner owner = new Owner(0, name, inputPhoto);
            owner.setId(ownerId);
            db.updateOwner(owner);
            loadCarOwnersFromDatabase();
            clearUpInputs();
        } catch (InvalidDataException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to create owner " + ex.getMessage(), "Internel error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btUpdateOwnerActionPerformed

    private void btDeleteOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeleteOwnerActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day11CarOwners.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day11CarOwners.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day11CarOwners.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day11CarOwners.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day11CarOwners().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddOwner;
    private javax.swing.JButton btDeleteOwner;
    private javax.swing.JButton btDeletePhoto;
    private javax.swing.JButton btGiveUpCar;
    private javax.swing.JButton btManageCars;
    private javax.swing.JButton btUpdateOwner;
    private javax.swing.JButton dlgCar_btAddCar;
    private javax.swing.JButton dlgCar_btDeleteCar;
    private javax.swing.JButton dlgCar_btUpdateCar;
    private javax.swing.JButton dlgCar_btUpdateOwner;
    private javax.swing.JLabel dlgCar_lblId;
    private javax.swing.JList<String> dlgCar_lstAllCars;
    private javax.swing.JList<Owner> dlgCar_lstAllOwners;
    private javax.swing.JTextField dlgCar_tfMakeModel;
    private javax.swing.JTextField dlgCar_tfPlates;
    private javax.swing.JTextField dlgCar_tfProdYear;
    private javax.swing.JDialog dlgCars;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JList<Car> lstCarsOwnedByOwner;
    private javax.swing.JList<String> lstOwnerHasCars;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
